name: Continuous Integration

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Check formatting (if prettier is added)
        run: |
          if [ -f ".prettierrc" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check .
          else
            echo "Prettier not configured, skipping format check"
          fi

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run TypeScript compiler
        run: npx tsc --noEmit

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run tests with coverage
        run: npm run test:coverage
      
      - name: Upload coverage reports to Codecov
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Build application
        run: npm run build
        env:
          # Add any build-time environment variables here
          NODE_ENV: production
      
      - name: Check build size
        run: |
          echo "Build completed successfully!"
          du -sh .next/
          echo "Build artifacts:"
          ls -la .next/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run security linting
        run: npm run lint:security
      
      - name: Run npm audit
        run: npm audit --audit-level moderate
      
      - name: Run audit-ci for CI integration
        run: npm run security:audit-ci

  # Integration tests (if you add them later)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: false # Enable when you have integration tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Start MongoDB (for integration tests)
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: '6.0'
      
      - name: Run integration tests
        run: npm run test:integration
        env:
          MONGO_URI: mongodb://localhost:27017/test

  # Collect all job results
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint, type-check, unit-tests, build, security-scan]
    if: always()
    
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint.result }}" == "success" && 
                "${{ needs.type-check.result }}" == "success" && 
                "${{ needs.unit-tests.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" && 
                "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ Some CI checks failed:"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Type Check: ${{ needs.type-check.result }}"
            echo "Unit Tests: ${{ needs.unit-tests.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "Security Scan: ${{ needs.security-scan.result }}"
            exit 1
          fi